{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610254806100326000396000f3fe608060405234801561001057600080fd5b5060043610610068577c010000000000000000000000000000000000000000000000000000000060003504630900f010811461006d578063445df0ac146100825780638da5cb5b1461009e578063fdacd576146100e3575b600080fd5b61008061007b3660046101cb565b6100f6565b005b61008b60015481565b6040519081526020015b60405180910390f35b6000546100be9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610095565b6100806100f1366004610206565b6101a6565b60005473ffffffffffffffffffffffffffffffffffffffff163314156101a3576001546040517ffdacd576000000000000000000000000000000000000000000000000000000008152829173ffffffffffffffffffffffffffffffffffffffff83169163fdacd5769161016f9160040190815260200190565b600060405180830381600087803b15801561018957600080fd5b505af115801561019d573d6000803e3d6000fd5b50505050505b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314156101a357600155565b6000602082840312156101dc578081fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146101ff578182fd5b9392505050565b600060208284031215610217578081fd5b503591905056fea264697066735822122057717214c0652b8e3e2759ee6278c461316bcc4e876067ea0e45ffc6ad8548a964736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x254 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x68 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x900F010 DUP2 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x445DF0AC EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xFDACD576 EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80 PUSH2 0x7B CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0xF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xBE SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x206 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xFDACD57600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0xFDACD576 SWAP2 PUSH2 0x16F SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1FF JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI PUSH18 0x7214C0652B8E3E2759EE6278C461316BCC4E DUP8 PUSH1 0x67 0xEA 0xE GASLIMIT SELFDESTRUCT 0xC6 0xAD DUP6 0x48 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
			"sourceMap": "56:514:0:-:0;;;151:50;;;;;;;;;-1:-1:-1;176:5:0;:18;;-1:-1:-1;;;;;;176:18:0;184:10;176:18;;;56:514;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:953:1",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:1",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "84:259:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "130:26:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "139:6:1"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "147:6:1"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "132:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "132:22:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "132:22:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "105:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "114:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "101:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "101:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "126:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "97:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "97:32:1"
											},
											"nodeType": "YulIf",
											"src": "94:2:1"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "165:36:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "191:9:1"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "178:12:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "178:23:1"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "169:5:1",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "287:26:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:1"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "304:6:1"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "289:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "289:22:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "289:22:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "223:5:1"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "234:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "241:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "230:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:54:1"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "220:2:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "220:65:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "213:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "213:73:1"
											},
											"nodeType": "YulIf",
											"src": "210:2:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "322:15:1",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "332:5:1"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "322:6:1"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "50:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "61:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "73:6:1",
										"type": ""
									}
								],
								"src": "14:329:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "418:120:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "464:26:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:1"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "466:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "466:22:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "466:22:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "439:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "448:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "435:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "435:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "460:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "431:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "431:32:1"
											},
											"nodeType": "YulIf",
											"src": "428:2:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "499:33:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "522:9:1"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "509:12:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "509:23:1"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "499:6:1"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "384:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "395:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "407:6:1",
										"type": ""
									}
								],
								"src": "348:190:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "644:125:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "654:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "666:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "677:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "662:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "662:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "654:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "696:9:1"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "711:6:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "719:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "707:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "707:55:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "689:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "689:74:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "689:74:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "613:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "624:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "635:4:1",
										"type": ""
									}
								],
								"src": "543:226:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "875:76:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "885:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "897:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "908:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "893:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "893:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "885:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "927:9:1"
													},
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "938:6:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "920:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "920:25:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "920:25:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "844:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "855:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "866:4:1",
										"type": ""
									}
								],
								"src": "774:177:1"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b5060043610610068577c010000000000000000000000000000000000000000000000000000000060003504630900f010811461006d578063445df0ac146100825780638da5cb5b1461009e578063fdacd576146100e3575b600080fd5b61008061007b3660046101cb565b6100f6565b005b61008b60015481565b6040519081526020015b60405180910390f35b6000546100be9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610095565b6100806100f1366004610206565b6101a6565b60005473ffffffffffffffffffffffffffffffffffffffff163314156101a3576001546040517ffdacd576000000000000000000000000000000000000000000000000000000008152829173ffffffffffffffffffffffffffffffffffffffff83169163fdacd5769161016f9160040190815260200190565b600060405180830381600087803b15801561018957600080fd5b505af115801561019d573d6000803e3d6000fd5b50505050505b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314156101a357600155565b6000602082840312156101dc578081fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146101ff578182fd5b9392505050565b600060208284031215610217578081fd5b503591905056fea264697066735822122057717214c0652b8e3e2759ee6278c461316bcc4e876067ea0e45ffc6ad8548a964736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x68 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x900F010 DUP2 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x445DF0AC EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xFDACD576 EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80 PUSH2 0x7B CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0xF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xBE SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x206 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xFDACD57600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0xFDACD576 SWAP2 PUSH2 0x16F SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1FF JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI PUSH18 0x7214C0652B8E3E2759EE6278C461316BCC4E DUP8 PUSH1 0x67 0xEA 0xE GASLIMIT SELFDESTRUCT 0xC6 0xAD DUP6 0x48 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
			"sourceMap": "56:514:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:175;;;;;;:::i;:::-;;:::i;:::-;;108:36;;;;;;;;;920:25:1;;;908:2;893:18;108:36:0;;;;;;;;82:20;;;;;;;;;;;;719:42:1;707:55;;;689:74;;677:2;662:18;82:20:0;644:125:1;278:109:0;;;;;;:::i;:::-;;:::i;393:175::-;257:5;;;;243:10;:19;239:26;;;536:24:::1;::::0;514:47:::1;::::0;;;;492:11;;514:21:::1;::::0;::::1;::::0;::::1;::::0;:47:::1;::::0;::::1;;920:25:1::0;;;908:2;893:18;;875:76;514:47:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;264:1;239:26:::0;393:175;:::o;278:109::-;257:5;;;;243:10;:19;239:26;;;344:24:::1;:36:::0;278:109::o;14:329:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;241:42;234:5;230:54;223:5;220:65;210:2;;304:6;296;289:22;210:2;332:5;84:259;-1:-1:-1;;;84:259:1:o;348:190::-;407:6;460:2;448:9;439:7;435:23;431:32;428:2;;;481:6;473;466:22;428:2;-1:-1:-1;509:23:1;;418:120;-1:-1:-1;418:120:1:o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "119200",
				"executionCost": "20457",
				"totalCost": "139657"
			},
			"external": {
				"last_completed_migration()": "386",
				"owner()": "437",
				"setCompleted(uint256)": "20500",
				"upgrade(address)": "infinite"
			}
		},
		"methodIdentifiers": {
			"last_completed_migration()": "445df0ac",
			"owner()": "8da5cb5b",
			"setCompleted(uint256)": "fdacd576",
			"upgrade(address)": "0900f010"
		}
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "last_completed_migration",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "completed",
					"type": "uint256"
				}
			],
			"name": "setCompleted",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "new_address",
					"type": "address"
				}
			],
			"name": "upgrade",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}